digraph "sw/airborne/filters/low_pass_filter.h"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="sw/airborne/filters\l/low_pass_filter.h",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="sw/airborne/firmwares\l/rotorcraft/guidance\l/guidance_indi.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$guidance__indi_8c.html",tooltip="A guidance mode based on Incremental Nonlinear Dynamic Inversion. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="sw/airborne/firmwares\l/rotorcraft/guidance\l/guidance_indi_hybrid.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$guidance__indi__hybrid_8c.html",tooltip="A guidance mode based on Incremental Nonlinear Dynamic Inversion Come to IROS2016 to learn more! ..."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="sw/airborne/firmwares\l/rotorcraft/stabilization\l/stabilization_attitude\l_heli_indi.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stabilization__attitude__heli__indi_8c.html",tooltip="Helicopter quaternion INDI attitude stabilization. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="sw/airborne/firmwares\l/rotorcraft/stabilization\l/stabilization_indi.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stabilization__indi_8c.html"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="sw/airborne/firmwares\l/rotorcraft/stabilization\l/stabilization_indi_simple.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stabilization__indi__simple_8c.html"];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="sw/airborne/firmwares\l/rotorcraft/stabilization\l/stabilization_indi_simple.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stabilization__indi__simple_8h.html"];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="sw/airborne/modules\l/ctrl/scheduling_indi\l_simple.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$scheduling__indi__simple_8c.html"];
  Node7 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node9 [label="sw/airborne/modules\l/ctrl/scheduling_indi\l_simple.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$scheduling__indi__simple_8h.html"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 [label="sw/airborne/modules\l/ins/hf_float.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hf__float_8c.html",tooltip="Horizontal filter (x,y) to estimate position and velocity. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 [label="sw/airborne/modules\l/sensors/airspeed_ms45xx_i2c.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$airspeed__ms45xx__i2c_8c.html",tooltip="Airspeed sensor module using the MS45xxDO digital pressure sensor via I2C. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node12 [label="sw/airborne/modules\l/sensors/airspeed_sdp3x.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$airspeed__sdp3x_8c.html",tooltip="Airspeed driver for the SDP3X pressure sensor via I2C. "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node13 [label="sw/airborne/modules\l/sensors/cameras/jevois\l_mavlink.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$jevois__mavlink_8c.html"];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node14 [label="sw/airborne/modules\l/sensors/rpm_sensor.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rpm__sensor_8c.html"];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node15 [label="sw/airborne/modules\l/system_identification\l/sys_id_chirp.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sys__id__chirp_8c.html"];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node16 [label="sw/simulator/nps/nps\l_fdm_gazebo.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$nps__fdm__gazebo_8cpp.html",tooltip="Flight Dynamics Model (FDM) for NPS using Gazebo. "];
}
