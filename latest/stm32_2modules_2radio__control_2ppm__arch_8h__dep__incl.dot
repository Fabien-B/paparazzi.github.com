digraph "sw/airborne/arch/stm32/modules/radio_control/ppm_arch.h"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="sw/airborne/arch/stm32\l/modules/radio_control\l/ppm_arch.h",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="sw/airborne/modules\l/radio_control/ppm.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ppm_8h.html"];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="sw/airborne/arch/chibios\l/modules/radio_control\l/ppm_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chibios_2modules_2radio__control_2ppm__arch_8c.html",tooltip="PPM interface between ChibiOS and Paparazzi. "];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="sw/airborne/arch/sim\l/modules/radio_control\l/ppm_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sim_2modules_2radio__control_2ppm__arch_8c.html",tooltip="PPM radio control, simulator specific. "];
  Node2 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="sw/airborne/arch/stm32\l/modules/radio_control\l/ppm_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stm32_2modules_2radio__control_2ppm__arch_8c.html",tooltip="STM32 ppm decoder. "];
  Node2 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="sw/airborne/modules\l/radio_control/ppm.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ppm_8c.html",tooltip="Architecture independent functions for PPM radio control. "];
}
