digraph "guidance_v_thrust_adapt"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="guidance_v_thrust_adapt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="get_vertical_thrust\l_coeff",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rotorcraft_2guidance_2guidance__v_8c.html#a88e5859a174ec5bf7fb911a351a15065",tooltip="get the cosine of the angle between thrust vector and gravity vector "];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="stateGetNedToBodyRMat_i",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__state__attitude.html#ga7c541b9b2e6231ac9a11a9e21562a5b3",tooltip="Get vehicle body attitude rotation matrix (int). "];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="orientationGetRMat_i",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__math__orientation__representation.html#ga4d3e785c7decf12ad0331c6ec207ded7",tooltip="Get vehicle body attitude rotation matrix (int). "];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="orientationCalcRMat_i",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__math__orientation__representation.html#ga8d3a2d675e2693d1780d587cd392d96a"];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="int32_rmat_of_quat",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__math__algebra__int.html#ga3cee8bb86ebb6befea5e2b4a97b3326f",tooltip="Convert unit quaternion to rotation matrix. "];
  Node1 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="gv_adapt_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$guidance__v__adapt_8c.html#a14968f81dc98fe21f0f996ceace5fb5d"];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="gv_adapt_run",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$guidance__v__adapt_8c.html#a108e823687eddd24bff053ea9a03943f",tooltip="Adaptation function. "];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node9 [label="stateGetAccelNed_i",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__state__acceleration.html#gab55b482bd9fe875141bafd34beda8bb4",tooltip="Get acceleration in NED coordinates (int). "];
  Node9 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 [label="stateCalcAccelNed_i",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__state__acceleration.html#ga48146adcdcd09bb704335795c6624ad8"];
  Node10 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 [label="ned_of_ecef_vect_i",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__math__geodetic__int.html#gab4eda479f4c01e96082d8a352f16cfea",tooltip="Rotate a vector from ECEF to NED. "];
  Node11 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node12 [label="enu_of_ecef_vect_i",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__math__geodetic__int.html#gaf0ee62cd162ca87bc294be6cfd107986",tooltip="Rotate a vector from ECEF to ENU. "];
}
