digraph "event_usb_serial"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="event_usb_serial",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="cmd_execute",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__serial__stm32__example1_8c.html#a4c05230e98a20fb7a4fdd8ad8e5c528a",tooltip="Execute command from user use strncmp. "];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="VCOM_putchar",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__ser__hw_8c.html#a19a213d00cf249a4d4d60dbf1a9907d3",tooltip="Writes one character to VCOM port fifo. "];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="fifo_put",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__ser__hw_8c.html#ae3001fd8504f8ad30ee40a958da7bf0c"];
  Node3 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="sys_time_usleep",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chibios_2mcu__periph_2sys__time__arch_8c.html#a74db3eed857f9c53bb67db256c12bc83",tooltip="sys_time_usleep(uint32_t us) "];
  Node3 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="VCOM_check_free_space",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__ser__hw_8c.html#ae4318c752d87ae9cc59828f07ec04946",tooltip="Checks if buffer free in VCOM buffer. "];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="fifo_free",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__ser__hw_8c.html#a1907098db4b59dda72fd85bfbef50248"];
  Node7 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="fifo_avail",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__ser__hw_8c.html#a84f023b865546e5a8433a00db4f06972"];
  Node3 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node9 [label="VCOM_send_message",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__ser__hw_8c.html#aad17c325b3e7623c13d24b25fc42fe3b",tooltip="Send data from fifo right now. "];
  Node9 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 [label="fifo_get",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__ser__hw_8c.html#af7c4a574284a673dbccf3346e072ba50"];
  Node2 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 [label="ReadUsbBuffer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__serial__stm32__example1_8c.html#a37712c8618bb3ae74339fb687cddd9e5",tooltip="Helper function. "];
  Node11 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node12 [label="VCOM_check_available",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__ser__hw_8c.html#a4cfafe558a6e594ce0638634e7cec7db",tooltip="Checks if data available in VCOM buffer. "];
  Node12 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node13 [label="usb_serial_parse_packet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__serial__stm32__example1_8c.html#a4a15762007447868777bd94670fd6493",tooltip="Parse data from buffer Note that the function receives int, not char Because we want to be able to ca..."];
  Node13 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node13 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node14 [label="VCOM_getchar",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__ser__hw_8c.html#a184633f63ad351d8e70857d9e5ba4a3e",tooltip="Reads one character from VCOM port. "];
  Node14 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node15 [label="usb_serial_parse_packet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__serial__stm32__example2_8c.html#a4a15762007447868777bd94670fd6493",tooltip="Parse data from buffer Note that the function receives int, not char Because we want to be able to ca..."];
  Node15 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node15 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node16 [label="VCOM_event",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$usb__ser__hw_8c.html#a15c895e4456578b3ca2818c1e17c832a",tooltip="Poll usb (required by libopencm3). "];
  Node16 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node16 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
}
