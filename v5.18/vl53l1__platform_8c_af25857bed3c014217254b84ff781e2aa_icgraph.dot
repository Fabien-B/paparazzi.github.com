digraph "VL53L1_RdByte"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="VL53L1_RdByte",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="VL53L1X_BootState",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a2c2712e30ef7022410a78af61ee64770",tooltip="This function returns the boot state of the device (1:booted, 0:not booted) "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="VL53L1X_BootDevice",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a4f5f0ac3cdbbcbc565f0babde7db4588",tooltip="Implement boot sequence of VL53L1 device as described in documentation See VL53L1X_SetTimingBudgetInM..."];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="multi_ranger_boot_device",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$cf__deck__multi__ranger_8c.html#a63ef1a1fb2184ea792b37e6982099348",tooltip="Boot a device. "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="multi_ranger_periodic",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$cf__deck__multi__ranger_8h.html#ab23c504c8c7175c03a791e85d8c721a6",tooltip="Module periodic function. "];
  Node3 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="sonar_vl53l1x_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sonar__vl53l1x_8h.html#af22954043e5570ba94680eec7b483fa0"];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="VL53L1X_CheckForDataReady",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a4d37ff28a4c3996805e1fe3fd4fe0206",tooltip="This function checks if the new ranging data is available by polling the dedicated register..."];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="VL53L1X_SensorInit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a09f0e0407aa544559216b42f6745d5fa",tooltip="This function loads the 135 bytes default values to initialize the sensor. "];
  Node8 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node9 [label="VL53L1X_StartTemperature\lUpdate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#afa096166165ff67887c9fd9f9dbdd691",tooltip="This function performs the temperature calibration. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 [label="VL53L1X_GetDistanceMode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a0fac06ee1759ea014072d7974ab9273c",tooltip="This function returns the current distance mode (1=short, 2=long). "];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 [label="VL53L1X_SetTimingBudgetInMs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a96416653f93aa7e5b8ed954c8b9cdd9f",tooltip="This function programs the timing budget in ms. "];
  Node11 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node12 [label="VL53L1X_SetDistanceMode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a1bed9923a29d7a7521d8c8e9a96cf97d",tooltip="This function programs the distance mode (1=short, 2=long(default)). "];
  Node12 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node13 [label="VL53L1X_GetDistanceThreshold\lWindow",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a3193a952dc2159c8ae3e4092ea6d5eeb",tooltip="This function returns the window detection mode (0=below; 1=above; 2=out; 3=in) "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node14 [label="VL53L1X_GetInterruptPolarity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a8249b0d608abb9be4beefaf81cb34713",tooltip="This function returns the current interrupt polarity 1=active high (default), 0=active low..."];
  Node14 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node15 [label="VL53L1X_GetRangeStatus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a5b399afb0ef8423ddd5a83897a9974da",tooltip="This function returns the ranging status error  (0:no error, 1:sigma failed, 2:signal failed..."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node16 [label="VL53L1X_GetROI_XY",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a00b10506941ef2584ee7fad0937a0c36",tooltip="This function returns width X and height Y. "];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node17 [label="VL53L1X_GetROICenter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#ad216c17a2c6291f9bb0cd8f903db543d",tooltip="This function returns the current user ROI center. "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node18 [label="VL53L1X_SetDistanceThreshold",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#aab8c6715dd0a1e694e1e92cbf3dd8d2a",tooltip="This function programs the threshold detection mode Example: VL53L1X_SetDistanceThreshold(dev,100,300,0,1): Below 100  VL53L1X_SetDistanceThreshold(dev,100,300,1,1): Above 300  VL53L1X_SetDistanceThreshold(dev,100,300,2,1): Out of window  VL53L1X_SetDistanceThreshold(dev,100,300,3,1): In window  . "];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node19 [label="VL53L1X_SetInterruptPolarity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a97c366aa4aa567c752f1d1bb6fc56cd3",tooltip="This function programs the interrupt polarity 1=active high (default), 0=active low. "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node20 [label="VL53L1X_SetROI",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#ae65432b46f39bf17ccbf560b19632a45",tooltip="This function programs the ROI (Region of Interest) The ROI position is centered, only the ROI size c..."];
}
