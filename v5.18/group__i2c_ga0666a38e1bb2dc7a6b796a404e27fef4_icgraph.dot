digraph "i2c_blocking_transceive"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="i2c_blocking_transceive",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="actuators_bebop_commit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$boards_2bebop_2actuators_8h.html#ad8f645b7663a54e01ba60403a1e45645"];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="actuators_disco_commit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$boards_2disco_2actuators_8h.html#a0181db6b0eea7688d52e6b73b141549b"];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="pca95xx_get_input",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pca95xx_8h.html#a4894b1bc38d5d006fa97c0067f8617a7",tooltip="Get input value. "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="gpio_ext_pca95xx_get",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gpio__ext__pca95xx_8c.html#ad1870118b0e44fc8e6c3d2c55085e05b"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="read_reg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mt9f002_8c.html#a776f344a93cb1df009bcf51511f151ae",tooltip="Read multiple bytes from a register. "];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="mt9f002_set_blanking",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mt9f002_8c.html#a36bbdbfc466a49d592b591d9d6a35b5f"];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="mt9f002_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mt9f002_8h.html#a8f43c3ad8d5ff841d1203ab6c760c8f0",tooltip="Initialisation of the Aptina MT9F002 CMOS sensor (front camera) "];
  Node7 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node9 [label="mt9f002_setting_update\l_resolution",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mt9f002_8h.html#aa1e09e3bbb34e6f084cf490573ca1f32"];
  Node6 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 [label="mt9f002_set_exposure",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mt9f002_8h.html#abcc9f0f2484aa96a4c1cef0c563fd62e",tooltip="Set the exposure configuration Depends on the blanking (and therefore the FPS) "];
  Node10 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 [label="mt9f002_reset_exposure",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mt9f002_8h.html#a107e8b9a036f53944cf021efd09ca617"];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node12 [label="update_ae_awb",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$bebop__ae__awb_8c.html#a8c0fd60f86284b6fea7ce86d81efcc04"];
  Node12 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node13 [label="bebop_ae_awb_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$bebop__ae__awb_8h.html#a488d91f59b9036f352ebc7fcafdedf7b"];
  Node10 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node14 [label="mt9f002_setting_update\l_exposure",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mt9f002_8h.html#af63a6fbefe3f1f4b959f6b1610b0c9f1"];
  Node10 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node15 [label="mt9f002_set_pll",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mt9f002_8c.html#a938725d4136403996410307333abe9f7",tooltip="Set the PLL registers based on config. "];
  Node15 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node16 [label="tfmini_i2c_periodic",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$tfmini__i2c_8h.html#a67597f5e58e3cd1ae90e934b74bf7461",tooltip="Get the ranger current distance value. "];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node17 [label="VL53L1_ReadMulti",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1__platform_8h.html#ab999b09c3be53bbc7715d25007750916",tooltip="VL53L1_ReadMulti() definition. "];
  Node17 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node18 [label="VL53L1_RdByte",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1__platform_8h.html#aa026c23b0a98e581183ff1b7661faac8",tooltip="VL53L1_RdByte() definition. "];
  Node18 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node19 [label="VL53L1X_BootState",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a2c2712e30ef7022410a78af61ee64770",tooltip="This function returns the boot state of the device (1:booted, 0:not booted) "];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node20 [label="VL53L1X_BootDevice",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a4f5f0ac3cdbbcbc565f0babde7db4588",tooltip="Implement boot sequence of VL53L1 device as described in documentation See VL53L1X_SetTimingBudgetInM..."];
  Node18 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node21 [label="VL53L1X_CheckForDataReady",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a4d37ff28a4c3996805e1fe3fd4fe0206",tooltip="This function checks if the new ranging data is available by polling the dedicated register..."];
  Node21 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node22 [label="VL53L1X_SensorInit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a09f0e0407aa544559216b42f6745d5fa",tooltip="This function loads the 135 bytes default values to initialize the sensor. "];
  Node22 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node18 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node23 [label="VL53L1X_GetDistanceMode",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a0fac06ee1759ea014072d7974ab9273c",tooltip="This function returns the current distance mode (1=short, 2=long). "];
  Node18 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node24 [label="VL53L1X_GetDistanceThreshold\lWindow",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a3193a952dc2159c8ae3e4092ea6d5eeb",tooltip="This function returns the window detection mode (0=below; 1=above; 2=out; 3=in) "];
  Node18 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node25 [label="VL53L1X_GetInterruptPolarity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a8249b0d608abb9be4beefaf81cb34713",tooltip="This function returns the current interrupt polarity 1=active high (default), 0=active low..."];
  Node25 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node18 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node26 [label="VL53L1X_GetRangeStatus",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a5b399afb0ef8423ddd5a83897a9974da",tooltip="This function returns the ranging status error  (0:no error, 1:sigma failed, 2:signal failed..."];
  Node18 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node27 [label="VL53L1X_GetROI_XY",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a00b10506941ef2584ee7fad0937a0c36",tooltip="This function returns width X and height Y. "];
  Node18 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node28 [label="VL53L1X_GetROICenter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#ad216c17a2c6291f9bb0cd8f903db543d",tooltip="This function returns the current user ROI center. "];
  Node18 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 [label="VL53L1X_SetDistanceThreshold",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#aab8c6715dd0a1e694e1e92cbf3dd8d2a",tooltip="This function programs the threshold detection mode Example: VL53L1X_SetDistanceThreshold(dev,100,300,0,1): Below 100  VL53L1X_SetDistanceThreshold(dev,100,300,1,1): Above 300  VL53L1X_SetDistanceThreshold(dev,100,300,2,1): Out of window  VL53L1X_SetDistanceThreshold(dev,100,300,3,1): In window  . "];
  Node18 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node30 [label="VL53L1X_SetInterruptPolarity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a97c366aa4aa567c752f1d1bb6fc56cd3",tooltip="This function programs the interrupt polarity 1=active high (default), 0=active low. "];
  Node18 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node31 [label="VL53L1X_SetROI",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#ae65432b46f39bf17ccbf560b19632a45",tooltip="This function programs the ROI (Region of Interest) The ROI position is centered, only the ROI size c..."];
  Node17 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node32 [label="VL53L1_RdDWord",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1__platform_8h.html#adad89adbfd623ab80104043eba3c36db",tooltip="VL53L1_RdDWord() definition. "];
  Node32 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node33 [label="VL53L1X_GetInterMeasurementInMs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#ab0995d826d85c96e883b415e6df49e8b",tooltip="This function returns the Intermeasurement period in ms. "];
  Node32 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node34 [label="VL53L1X_GetXtalk",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#ae298027422905ff20480815b9ed08677",tooltip="This function returns the current programmed xtalk correction value in cps. "];
  Node17 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node35 [label="VL53L1_RdWord",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1__platform_8h.html#acc21e994d7d6651df18f96648afb37ea",tooltip="VL53L1_RdWord() definition. "];
  Node35 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node36 [label="VL53L1X_GetAmbientPerSpad",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a8d018e27b9c34db64010ebc174a26907",tooltip="This function returns the ambient per SPAD in kcps/SPAD. "];
  Node35 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node37 [label="VL53L1X_GetAmbientRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a0ffa189d040e33c3cadcf997a6475db1",tooltip="This function returns the ambient rate in kcps. "];
  Node35 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node38 [label="VL53L1X_GetDistance",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#af36478a58eb8f029df317a4b5e6ee74e",tooltip="This function returns the distance measured by the sensor in mm. "];
  Node35 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node39 [label="VL53L1X_GetDistanceThresholdHigh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#af07ceb7e716ebd6bcbd6b7e5aab48229",tooltip="This function returns the high threshold in mm. "];
  Node35 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node40 [label="VL53L1X_GetDistanceThresholdLow",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a8102d88dbc2cf3244a8e1f5e05289b1d",tooltip="This function returns the low threshold in mm. "];
  Node35 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node35 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 [label="VL53L1X_GetOffset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#ad1bc716d59b9abf899bb5d206a8aa8cf",tooltip="This function returns the programmed offset correction value in mm. "];
  Node35 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node42 [label="VL53L1X_GetSensorId",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a98697d46d1e29662b0145ecd59311d1a",tooltip="This function returns the sensor id, sensor Id must be 0xEEAC. "];
  Node35 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node43 [label="VL53L1X_GetSigmaThreshold",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#aebf3b9ca3da997343a402dae99e131a3",tooltip="This function returns the current sigma threshold in mm. "];
  Node35 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node44 [label="VL53L1X_GetSignalPerSpad",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a41c579ed15ea121d468170f32eb472e0",tooltip="This function returns the returned signal per SPAD in kcps/SPAD. "];
  Node35 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node45 [label="VL53L1X_GetSignalRate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a9f8b0ca80a98f3249bd9e4953a03dceb",tooltip="This function returns the returned signal in kcps. "];
  Node35 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node46 [label="VL53L1X_GetSignalThreshold",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a877342826a5beee1c7370a80b6d2c6f0",tooltip="This function returns the current signal threshold in kcps. "];
  Node35 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node47 [label="VL53L1X_GetSpadNb",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#ae8c0b2a86192d524f44c8633c3a1a06f",tooltip="This function returns the current number of enabled SPADs. "];
  Node35 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node48 [label="VL53L1X_GetTimingBudgetInMs",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a24042216e0c01b994e52b248aa60f145",tooltip="This function returns the current timing budget in ms. "];
  Node35 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node49 [label="VL53L1X_SetInterMeasurementInMs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a2f9dc21891cedff85ec8465c3c9b9d66",tooltip="This function programs the Intermeasurement period in ms Intermeasurement period must be >/= timing b..."];
  Node49 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node17 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node50 [label="VL53L1X_GetResult",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$vl53l1x__api_8h.html#a71be30985998f0500d22a3d76309f6d3",tooltip="This function returns measurements and the range status in a single read access. "];
}
