digraph "sw/airborne/mcu_periph/gpio.h"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="sw/airborne/mcu_periph\l/gpio.h",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="sw/airborne/arch/chibios\l/led_hw.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chibios_2led__hw_8h.html",tooltip="Led macro implementation for ChibiOS arch. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="sw/airborne/arch/chibios\l/mcu_periph/adc_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chibios_2mcu__periph_2adc__arch_8c.html",tooltip="ADC driver. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="sw/airborne/arch/chibios\l/mcu_periph/gpio_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chibios_2mcu__periph_2gpio__arch_8c.html",tooltip="gpio functions implemented for ChibiOS arch "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="sw/airborne/arch/chibios\l/mcu_periph/pwm_input_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chibios_2mcu__periph_2pwm__input__arch_8c.html",tooltip="handling of stm32 PWM input using a timer with capture. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="sw/airborne/arch/chibios\l/mcu_periph/sdio_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sdio__arch_8c.html",tooltip="SDIO interface using ChibiOS API for Paparazzi. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="sw/airborne/arch/chibios\l/mcu_periph/spi_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chibios_2mcu__periph_2spi__arch_8c.html",tooltip="Implementation of SPI interface for ChibiOS arch. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="sw/airborne/arch/chibios\l/mcu_periph/uart_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chibios_2mcu__periph_2uart__arch_8c.html",tooltip="UART/Serial driver implementation for ChibiOS arch. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node9 [label="sw/airborne/arch/chibios\l/modules/actuators/actuators\l_dshot_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chibios_2modules_2actuators_2actuators__dshot__arch_8c.html"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 [label="sw/airborne/arch/chibios\l/modules/light/light_ws2812_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$light__ws2812__arch_8c.html"];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 [label="sw/airborne/arch/chibios\l/subsystems/actuators/actuators\l_pwm_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chibios_2subsystems_2actuators_2actuators__pwm__arch_8c.html",tooltip="Interface from actuators to ChibiOS PWM driver. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node12 [label="sw/airborne/arch/stm32\l/led_hw.h",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$stm32_2led__hw_8h.html"];
  Node12 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node13 [label="sw/airborne/boards\l/ardrone/actuators.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$boards_2ardrone_2actuators_8c.html",tooltip="Actuator driver for ardrone2 version. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node14 [label="sw/airborne/arch/stm32\l/mcu_periph/adc_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stm32_2mcu__periph_2adc__arch_8c.html",tooltip="Driver for the analog to digital converters on STM32. "];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node15 [label="sw/airborne/arch/stm32\l/mcu_periph/gpio_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stm32_2mcu__periph_2gpio__arch_8c.html",tooltip="GPIO helper functions for STM32F1 and STM32F4. "];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node16 [label="sw/airborne/arch/stm32\l/mcu_periph/i2c_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stm32_2mcu__periph_2i2c__arch_8c.html",tooltip="Handling of I2C hardware for STM32. "];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node17 [label="sw/airborne/arch/stm32\l/mcu_periph/pwm_input\l_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stm32_2mcu__periph_2pwm__input__arch_8c.html",tooltip="handling of smt32 PWM input using a timer with capture. "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node18 [label="sw/airborne/arch/stm32\l/mcu_periph/spi_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stm32_2mcu__periph_2spi__arch_8c.html",tooltip="Handling of SPI hardware for STM32. "];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node19 [label="sw/airborne/arch/stm32\l/mcu_periph/uart_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stm32_2mcu__periph_2uart__arch_8c.html",tooltip="Handling of UART hardware for STM32. "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node20 [label="sw/airborne/arch/stm32\l/subsystems/radio_control\l/ppm_arch.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stm32_2subsystems_2radio__control_2ppm__arch_8c.html",tooltip="STM32 ppm decoder. "];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node21 [label="sw/airborne/arch/stm32\l/uart_tunnel.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stm32_2uart__tunnel_8c.html"];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node22 [label="sw/airborne/autopilot.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$autopilot_8c.html",tooltip="Core autopilot interface common to all firmwares. "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node23 [label="sw/airborne/boards\l/ardrone/gpio_ardrone.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gpio__ardrone_8c.html",tooltip="ardrone GPIO driver "];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node24 [label="sw/airborne/boards\l/ardrone/navdata.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$navdata_8c.html",tooltip="ARDrone2 navdata aquisition driver. "];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node25 [label="sw/airborne/mcu_periph\l/softi2c.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$softi2c_8c.html",tooltip="Platform-independent software I2C implementation. "];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node26 [label="sw/airborne/modules\l/boards/opa_controller_ap.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$opa__controller__ap_8c.html"];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node27 [label="sw/airborne/modules\l/boards/opa_controller_fbw.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$opa__controller__fbw_8c.html"];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node28 [label="sw/airborne/modules\l/cam_control/rotorcraft_cam.h",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$rotorcraft__cam_8h.html",tooltip="Camera control module for rotorcraft. "];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 [label="sw/airborne/modules\l/digital_cam/gpio_cam\l_ctrl.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gpio__cam__ctrl_8c.html",tooltip="Control the camera via GPIO pins. "];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node30 [label="sw/airborne/modules\l/digital_cam/hackhd.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hackhd_8c.html",tooltip="Digital video/photo recorder HackHD control. "];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node31 [label="sw/airborne/modules\l/display/max7456.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$max7456_8c.html",tooltip="Maxim MAX7456 single-channel monochrome on-screen display driver. "];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node32 [label="sw/airborne/modules\l/energy/bat_checker.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$bat__checker_8c.html",tooltip="Activate a buzzer/LED periodically or periodically to warn of low/critical battery level..."];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node33 [label="sw/airborne/modules\l/gpio_ext/gpio_ext_common.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gpio__ext__common_8c.html"];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node34 [label="sw/airborne/modules\l/meteo/humid_sht.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$humid__sht_8c.html",tooltip="SHTxx sensor interface. "];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node35 [label="sw/airborne/modules\l/meteo/humid_sht_uart.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$humid__sht__uart_8c.html",tooltip="SHTxx sensor interface. "];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node36 [label="sw/airborne/modules\l/meteo/meteo_france_DAQ.h",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$meteo__france__DAQ_8h.html",tooltip="Communication module with the Data Acquisition board from Meteo France. "];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node37 [label="sw/airborne/modules\l/meteo/mf_ptu.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mf__ptu_8c.html"];
  Node1 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node38 [label="sw/airborne/modules\l/spektrum_soft_bind\l/spektrum_soft_bind_ap.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$spektrum__soft__bind__ap_8c.html"];
  Node1 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node39 [label="sw/airborne/modules\l/spektrum_soft_bind\l/spektrum_soft_bind_fbw.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$spektrum__soft__bind__fbw_8c.html"];
  Node1 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node40 [label="sw/airborne/peripherals\l/cyrf6936.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$cyrf6936_8c.html",tooltip="Driver for the cyrf6936 2.4GHz radio chip. "];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 [label="sw/airborne/subsystems\l/datalink/bluegiga.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$bluegiga_8c.html",tooltip="Datalink implementation for the BlueGiga Bluetooth radio chip trough SPI. "];
  Node1 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node42 [label="sw/airborne/subsystems\l/datalink/superbitrf.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$subsystems_2datalink_2superbitrf_8c.html"];
  Node1 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node43 [label="sw/airborne/subsystems\l/datalink/superbitrf.h",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$subsystems_2datalink_2superbitrf_8h.html"];
  Node43 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node44 [label="sw/airborne/subsystems\l/datalink/w5100.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$w5100_8c.html",tooltip="W5100 ethernet chip I/O. "];
  Node1 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node45 [label="sw/airborne/subsystems\l/imu/imu_aspirin_i2c.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$imu__aspirin__i2c_8c.html"];
  Node1 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node46 [label="sw/airborne/subsystems\l/radio_control/cc2500\l_frsky/cc2500_compat.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$cc2500__compat_8c.html"];
  Node1 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node47 [label="sw/airborne/subsystems\l/radio_control/cc2500\l_frsky/cc2500_settings.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$cc2500__settings_8c.html"];
  Node1 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node48 [label="sw/airborne/subsystems\l/radio_control/hott_common.h",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$hott__common_8h.html",tooltip="Common hott structs and defines. "];
  Node1 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node49 [label="sw/airborne/subsystems\l/radio_control/sbus_common.h",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$sbus__common_8h.html",tooltip="Common sbus structs and defines. "];
  Node1 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node50 [label="sw/airborne/subsystems\l/radio_control/spektrum.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$spektrum_8c.html",tooltip="Spektrum sattelite receiver implementation. "];
}
